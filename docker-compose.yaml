include:
  - docker-compose.common.yaml

services:
  main-api:
    image: rust:1.89
    restart: always
    ports:
      - "3000:3000"
    environment:
      ENV: dev
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@postgres:5432/ratel}
      DYNAMODB_ENDPOINT: http://localstack:4566
      MIGRATE: "true"
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
    volumes:
      - .:/app
      - ./.build/target:/app/target
      - ./.build/main-api/target:/app/packages/main-api/target
    working_dir: /app
    command: ["bash", "scripts/api-entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 100
    depends_on:
      postgres:
        condition: service_healthy
      postgres-init:
        condition: service_healthy
    networks:
      - ratel-network

  # Web Frontend - Development build
  web:
    image: node:22.14
    restart: always
    volumes:
      - ./.build/node_modules:/app/node_modules
      - ./.build/web_node_modules:/app/ts-packages/web/node_modules
      - ./.build/pnpm-store:/app/.pnpm-store
      - .:/app
    working_dir: /app
    command: ["bash", "scripts/web-entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 100
    environment:
      PORT: 8080
      API_URL: "http://main-api:3000"
      GRAPHQL_URL: "http://hasura:8080/v1/graphql"
    ports:
      - "8080:8080"
    networks:
      - ratel-network

  # Fetcher Service - Development build
  fetcher:
    image: rust:1.89
    restart: always
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - ./.build/target:/app/target
      - ./.build/fetcher/target:/app/packages/fetcher/target
    working_dir: /app
    environment:
      ENV: dev
      RUST_LOG: debug
      PORT: 3001
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@postgres:5432/ratel}
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
    command: ["bash", "scripts/fetcher-entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 100
    networks:
      - ratel-network

