include:
  - docker-compose.common.yaml

services:
  main-api:
    image: main-api:pr-${GITHUB_SHA:-latest}
    restart: always
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 100
    depends_on:
      postgres:
        condition: service_healthy
      postgres-init:
        condition: service_healthy
      localstack:
        condition: service_healthy
      dynamodb-init:
        condition: service_completed_successfully
      sqs-init:
        condition: service_completed_successfully
    networks:
      - ratel-network

  # Fetcher Service - Uses pre-built image
  fetcher:
    image: fetcher:pr-${GITHUB_SHA:-latest}
    restart: always
    ports:
      - "3001:3001"
    environment:
      ENV: dev
      RUST_LOG: debug
      PORT: 3001
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/ratel
      RPC_ENDPOINT: "http://localhost:3001"
      TELEGRAM_TOKEN: ""
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 100
    depends_on:
      postgres:
        condition: service_healthy
      postgres-init:
        condition: service_healthy
    networks:
      - ratel-network

  web:
    image: web:pr-${GITHUB_SHA:-latest}
    restart: always
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      API_URL: "http://main-api:3000"
      GRAPHQL_URL: "http://hasura:8080/v1/graphql"
      NODE_ENV: test
      NEXT_PUBLIC_API_URL: "http://localhost:3000"
      NEXT_PUBLIC_GRAPHQL_URL: "http://localhost:28080/v1/graphql"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 100
    depends_on:
      main-api:
        condition: service_healthy
    networks:
      - ratel-network
